{"title":"Import CSV and OSM data into PostgreSQL using ogr2ogr","markdown":{"yaml":{"title":"Import CSV and OSM data into PostgreSQL using ogr2ogr","date":"2022-09-18","slug":"import-csv-and-osm-data-into-postgresql-using-ogr2ogr","categories":[],"tags":[],"subtitle":"","lastmod":"2022-09-18T15:14:02+05:30","featured":"no","image":"featured.png"},"headingText":"1. Insert CSV to PostgreSQL","containsRefs":false,"markdown":"\n\n\n[ogr2ogr](https://gdal.org/programs/ogr2ogr.html) is the swiss knife for vector geometry conversion. You can import CSV with latitude and longitude columns as Point geometry into PostgreSQL. This tool also makes it easy to import OSM data to be imported into PostgreSQL with a lot of flexibility. \n\n\n\n\nOur CSV contains information about retail food stores including cafes, restaurants, grocery information with the location and name. Download the data [here](https://github.com/amanbagrecha/amanbagrecha.github.io/files/9592312/filter_all_cat_data.csv)\n\n![image](https://user-images.githubusercontent.com/76432265/190896961-cc985bf1-0b5b-4665-b53a-bcb9eadf50eb.png)\n\n\nWe first read the metadata of the CSV using ogrinfo\n\n```sh\nogrinfo -so filter_all_cat_data.csv filter_all_cat_data\n```\n\nAssuming you have a database already (`postgres` here), we run the following command to create `postgis` extension for `postgres` database. The connection string is of the format as described [here](https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNSTRING)\n\n```sh\npsql -c \"create extension postgis;\" \"postgresql://postgres:1234@localhost:5432/postgres\"\n```\n\nFinally, we insert the CSV into PostgreSQL table named **cat_data_copy** and assign CRS of EPSG:4326.\n\n```sh\nogr2ogr -f PostgreSQL PG:\"host=localhost user=postgres dbname=postgres password=1234\" filter_all_cat_data.csv -oo X_POSSIBLE_NAMES=long_url -oo Y_POSSIBLE_NAMES=lat_url -nlt POINT -nln \"cat_data_copy\" -sql \"select name,city,lat_url,long_url,type from filter_all_cat_data\" -a_srs \"EPSG:4326”\n```\nThe following explains few of the flags\n\n- `-oo`: `X_POSSIBLE_NAMES` and `Y_POSSIBLE_NAMES` allows us to specify geometry columns from CSV\n\n- `-nlt`: Define the geometry type for the table\n\n- `-nln`: alternate Table name (defaults to name of the file)\n\n- `-sql`: write SQL to insert only selected columns into the table\n\n---\n\n\n## 2. Insert OSM data to PostgreSQL\n\nOur OSM data is of Bahamas downloaded from geofabrik. You can download it from [here](https://download.geofabrik.de/central-america/bahamas-latest.osm.pbf)\n\nWe first read the metadata of the OSM data using ogrinfo\n\n```sh\nogrinfo -so bahamas-latest.osm.pbf multipolygons\n```\n\nWe find about the geometry column, CRS and columns in the data. This will be used when inserting the data into the database.\n\n\nNext we create postgis and hstore extensions in our `postgres` database. \n\n```sh\npsql -c \"create extension hstore; create extension postgis\" \"postgresql://postgres:1234@localhost:5432/postgres\"\n```\n\nFinally we insert the data into PostgreSQL with table name as **bahamas_mpoly** with only multipolygons. We convert the `other_tags` column into `hstore` and insert only those rows where the `name` column does not contain a null value. We also clip our data to a bounding box and promote our polygons to multipolygons to avoid error.\n\n```sh\nogr2ogr -f PostgreSQL PG:\"dbname=postgres host=localhost port=5432 user=postgres password=1234\" bahamas-latest.osm.pbf multipolygons -nln bahamas_mpoly -lco COLUMN_TYPES=other_tags=hstore -overwrite -skipfailures -where \"name is not null\" -clipsrc -78 23 -73 27 -nlt PROMOTE_TO_MULTI\n```\n\n---\n\n#### Video version of the blog can be found [here](https://youtu.be/87liLpASYPI)","srcMarkdownNoYaml":"\n\n\n[ogr2ogr](https://gdal.org/programs/ogr2ogr.html) is the swiss knife for vector geometry conversion. You can import CSV with latitude and longitude columns as Point geometry into PostgreSQL. This tool also makes it easy to import OSM data to be imported into PostgreSQL with a lot of flexibility. \n\n\n\n## 1. Insert CSV to PostgreSQL\n\nOur CSV contains information about retail food stores including cafes, restaurants, grocery information with the location and name. Download the data [here](https://github.com/amanbagrecha/amanbagrecha.github.io/files/9592312/filter_all_cat_data.csv)\n\n![image](https://user-images.githubusercontent.com/76432265/190896961-cc985bf1-0b5b-4665-b53a-bcb9eadf50eb.png)\n\n\nWe first read the metadata of the CSV using ogrinfo\n\n```sh\nogrinfo -so filter_all_cat_data.csv filter_all_cat_data\n```\n\nAssuming you have a database already (`postgres` here), we run the following command to create `postgis` extension for `postgres` database. The connection string is of the format as described [here](https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNSTRING)\n\n```sh\npsql -c \"create extension postgis;\" \"postgresql://postgres:1234@localhost:5432/postgres\"\n```\n\nFinally, we insert the CSV into PostgreSQL table named **cat_data_copy** and assign CRS of EPSG:4326.\n\n```sh\nogr2ogr -f PostgreSQL PG:\"host=localhost user=postgres dbname=postgres password=1234\" filter_all_cat_data.csv -oo X_POSSIBLE_NAMES=long_url -oo Y_POSSIBLE_NAMES=lat_url -nlt POINT -nln \"cat_data_copy\" -sql \"select name,city,lat_url,long_url,type from filter_all_cat_data\" -a_srs \"EPSG:4326”\n```\nThe following explains few of the flags\n\n- `-oo`: `X_POSSIBLE_NAMES` and `Y_POSSIBLE_NAMES` allows us to specify geometry columns from CSV\n\n- `-nlt`: Define the geometry type for the table\n\n- `-nln`: alternate Table name (defaults to name of the file)\n\n- `-sql`: write SQL to insert only selected columns into the table\n\n---\n\n\n## 2. Insert OSM data to PostgreSQL\n\nOur OSM data is of Bahamas downloaded from geofabrik. You can download it from [here](https://download.geofabrik.de/central-america/bahamas-latest.osm.pbf)\n\nWe first read the metadata of the OSM data using ogrinfo\n\n```sh\nogrinfo -so bahamas-latest.osm.pbf multipolygons\n```\n\nWe find about the geometry column, CRS and columns in the data. This will be used when inserting the data into the database.\n\n\nNext we create postgis and hstore extensions in our `postgres` database. \n\n```sh\npsql -c \"create extension hstore; create extension postgis\" \"postgresql://postgres:1234@localhost:5432/postgres\"\n```\n\nFinally we insert the data into PostgreSQL with table name as **bahamas_mpoly** with only multipolygons. We convert the `other_tags` column into `hstore` and insert only those rows where the `name` column does not contain a null value. We also clip our data to a bounding box and promote our polygons to multipolygons to avoid error.\n\n```sh\nogr2ogr -f PostgreSQL PG:\"dbname=postgres host=localhost port=5432 user=postgres password=1234\" bahamas-latest.osm.pbf multipolygons -nln bahamas_mpoly -lco COLUMN_TYPES=other_tags=hstore -overwrite -skipfailures -where \"name is not null\" -clipsrc -78 23 -73 27 -nlt PROMOTE_TO_MULTI\n```\n\n---\n\n#### Video version of the blog can be found [here](https://youtu.be/87liLpASYPI)"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"paged","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"wrap","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../_variables.scss"],"toc":true,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en-GB","fig-responsive":true,"quarto-version":"1.3.450","theme":["sandstone"],"page-layout":"article","fontsize":"1.1em","linestretch":1.7,"fontcolor":"black","author":[{"id":"cvc","number":1,"name":{"given":"Aman","family":"Bagrecha","literal":"Aman Bagrecha","non-dropping-particle":"von"},"orcid":"0000-0003-3131-0864","email":"jainaman588@gmail.com"}],"mermaid":{"theme":"neutral"},"title":"Import CSV and OSM data into PostgreSQL using ogr2ogr","date":"2022-09-18","slug":"import-csv-and-osm-data-into-postgresql-using-ogr2ogr","categories":[],"tags":[],"subtitle":"","lastmod":"2022-09-18T15:14:02+05:30","featured":"no","image":"featured.png"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}