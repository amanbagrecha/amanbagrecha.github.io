{"title":"Download and preprocess NASA GPM IMERG Data using Python and wget","markdown":{"yaml":{"title":"Download and preprocess NASA GPM IMERG Data using Python and wget","date":"2022-04-20","slug":"download-and-preprocess-nasa-gpm-imerg-data-using-python-and-wget","categories":["Python"],"tags":["xarray","Colab"],"subtitle":"","description":"In this blog post we look into how to download precipitation data from NASA website and process it with `xarray` and/or `wget`.","featured":"no","draft":false,"reading-time":"yes"},"headingText":"Pre-requisites","containsRefs":false,"markdown":"\n\n\nWe are going to work with [GPM IMERG Late Precipitation L3 Half Hourly 0.1 degree x 0.1 degree V06 (GPM_3IMERGHHL)](https://disc.gsfc.nasa.gov/datasets/GPM_3IMERGHHL_06/summary) data provided by NASA which gives half-hourly precipitation values for entire globe.\n\n\n- You must have an Earthdata Account\n- Link GES DISC with your account\n\nRefer to [this](https://daac.gsfc.nasa.gov/earthdata-login) page on how to Link GES DISC to your account.\n\n*First method* - We would be downloading netCDF data using the `requests` module and preprocessing the file using `xarray`. \n\n*Second method* - To download netCDF file using wget and using `xarray` to preprocess and visualise the data. \n\n### Downloading link list\n\nWe first select the region for which we want to download the data by visiting the [GPM IMERG](https://disc.gsfc.nasa.gov/datasets/GPM_3IMERGHHL_06/summary) website and clicking on **subset/ Get Data** link at right corner. \n![GPM IMERG GES DESC website](https://i.imgur.com/3RH1ot2.png)\n\nIn the popup, select\n1.  **Download Method** as `Get File Subsets using OPeNDAP` \n2. **Refine Date Range** as the date you want the data for. In my case, I choose 10 days of data.\n3. **Refine Region** to subset data for your area of interest. In my case I choose `77.45,12.85,77.75,13.10`\n4. Under **Variables**, select `precipitationCal`.\n5. For **file format**, we choose `netCDF` and click the **Get Data** button.\n\n![](https://i.imgur.com/xCp8Shs.png)\n\nThis will download a text file, containing all the links to download individual half hourly data for our area of interest in netCDF file format.\n\nNow we move to Google Colaboratory, to download the data in netCDF file format. We use Google Colaboratory as it has many libraries pre-loaded and saves the hassle to install them.\n\nIf you're area of interest (or) the timeframe of download is large, please use local machine as Google Colaboratory only offers ~60 GB of free storage.\n\n### Method 1: Using Python to read and preprocess the data inside Google Colaboratory.\n\nOpen a new google Colab notebook and upload the downloaded text file. Our uploaded text file looks like the following.\n\n![](https://i.imgur.com/njlFhPT.png)\n\nAs one last requirement, NASA requires authentication to access the data and thus we have to create a `.netrc` file and save it at specified location (under `/root` dir in our case). \n\n### Creating `.netrc` file\n\nOpen your notepad and type in the following text. Make sure to replace `your_login_username` and `your_password` with your earthdata credentials. Now save it as `.netrc` file.\n\n```\nmachine urs.earthdata.nasa.gov login your_login_username password your_password\n```\n\nUpload the `.netrc` file to Colab under `root` directory as shown in the figure below.\n\n![](https://i.imgur.com/oZLeJuY.png)\n\n\nNow we have all the setup done and are ready to code.\n\nWe first load the required libraries. Then, read the text file and loop over every line in it to download from the URL using the `requests` module. Finally, we save the file to Colab's hard drive. If you do not see the files after running code, make sure to wait for at least a day after registering to earthdata to make your account activated. I was late to read about it and had wasted a long time debugging it. \n\n```python\nimport pandas as pd\nimport numpy as np\nimport xarray as xr\nimport requests \n\n# dataframe to read the text file which contains all the download links\nds = pd.read_csv('/content/subset_GPM_3IMERGHH_06_20210611_142330.txt', header = None, sep = '\\n')[0]\n\n# Do not forget to add .netrc file in the root dir of Colab. printing `result` should return status code 200\nfor file in range(2, len(ds)): # skip first 2 rows as they contain metadata files\n  URL = ds[file]\n  result = requests.get(URL)\n  try:\n    result.raise_for_status()\n    filename = 'test' + str(file) + '.nc'\n    with open(filename, 'wb') as f:\n        f.write(result.content)\n\n  except:\n    print('requests.get() returned an error code '+str(result.status_code))\n\nxr_df = xr.open_mfdataset('test*.nc')\n\nxr_df.mean(dim = ['lat', 'lon']).to_dataframe().to_csv('results.csv')\n\n```\nIn the above snippet, what is interesting is the method `open_mfdataset` which takes in all the `netCDF` files and gives us a nice, compact output from which we can subset and further process our data.\nHere, we take the average of all the values (precipitation) and convert it into a new dataframe. We are ready to export it as CSV.\n\n### Method 2: Using wget to download and then preprocess using xarray\n\nIn this method, we download all the netCDF files using `wget`. These files are then read using xarray which makes it really easy to process and get the information we require. \n\n\nRunning the following shell command in Google Colab will download all the data from the text file URLs. Make sure to replace `your_user_name` , `<url text file>` within the command. It will ask for password of your earthdata account on running the cell.\n\n```sh\n! wget --load-cookies /.urs_cookies --save-cookies /root/.urs_cookies --auth-no-challenge=on --user=your_user_name --ask-password --content-disposition -i <url text file>\n```\n\nOnce the above shell command is run on Colab, the following 2 lines of code will give a nice dataframe which can be exported to csv for further analysis. \n\n```python\nimport xarray as xr\nimport glob\n\nds = xr.open_mfdataset('test*.nc')\nds.precipitationCal.mean(dim=('lon', 'lat')).plot() # calculate the average precipitation on a half-hourly basis.\n```\n\n### Final Comments\n\nIn this post we looked into how to download and preprocess netCDF data provided by [NASA GES DISC](https://disc.gsfc.nasa.gov/datasets/GPM_3IMERGHHL_06/summary).\nWe looked at two methods, one with pure Python and the other with wget and xarray. All performed on google Colab. \nIt is to be noted that, there is a significant setup required i.e, to create a new `.netrc` file and store inside the root directory of Colab else it returns an authorisation error. We looked at how easy it is to process netCDF data in xarray and how wget commands can be run on Colab.\n\nWatch the video tutorial [here](https://www.youtube.com/watch?v=T_Us4hJxSeI). The notebook for reference is located [here](https://Colab.research.google.com/drive/1VIKun8K3RT8VvcPJ7DE5uDDC10i10k1T?usp=sharing).\n\n\n","srcMarkdownNoYaml":"\n\n\nWe are going to work with [GPM IMERG Late Precipitation L3 Half Hourly 0.1 degree x 0.1 degree V06 (GPM_3IMERGHHL)](https://disc.gsfc.nasa.gov/datasets/GPM_3IMERGHHL_06/summary) data provided by NASA which gives half-hourly precipitation values for entire globe.\n\n\n### Pre-requisites\n- You must have an Earthdata Account\n- Link GES DISC with your account\n\nRefer to [this](https://daac.gsfc.nasa.gov/earthdata-login) page on how to Link GES DISC to your account.\n\n*First method* - We would be downloading netCDF data using the `requests` module and preprocessing the file using `xarray`. \n\n*Second method* - To download netCDF file using wget and using `xarray` to preprocess and visualise the data. \n\n### Downloading link list\n\nWe first select the region for which we want to download the data by visiting the [GPM IMERG](https://disc.gsfc.nasa.gov/datasets/GPM_3IMERGHHL_06/summary) website and clicking on **subset/ Get Data** link at right corner. \n![GPM IMERG GES DESC website](https://i.imgur.com/3RH1ot2.png)\n\nIn the popup, select\n1.  **Download Method** as `Get File Subsets using OPeNDAP` \n2. **Refine Date Range** as the date you want the data for. In my case, I choose 10 days of data.\n3. **Refine Region** to subset data for your area of interest. In my case I choose `77.45,12.85,77.75,13.10`\n4. Under **Variables**, select `precipitationCal`.\n5. For **file format**, we choose `netCDF` and click the **Get Data** button.\n\n![](https://i.imgur.com/xCp8Shs.png)\n\nThis will download a text file, containing all the links to download individual half hourly data for our area of interest in netCDF file format.\n\nNow we move to Google Colaboratory, to download the data in netCDF file format. We use Google Colaboratory as it has many libraries pre-loaded and saves the hassle to install them.\n\nIf you're area of interest (or) the timeframe of download is large, please use local machine as Google Colaboratory only offers ~60 GB of free storage.\n\n### Method 1: Using Python to read and preprocess the data inside Google Colaboratory.\n\nOpen a new google Colab notebook and upload the downloaded text file. Our uploaded text file looks like the following.\n\n![](https://i.imgur.com/njlFhPT.png)\n\nAs one last requirement, NASA requires authentication to access the data and thus we have to create a `.netrc` file and save it at specified location (under `/root` dir in our case). \n\n### Creating `.netrc` file\n\nOpen your notepad and type in the following text. Make sure to replace `your_login_username` and `your_password` with your earthdata credentials. Now save it as `.netrc` file.\n\n```\nmachine urs.earthdata.nasa.gov login your_login_username password your_password\n```\n\nUpload the `.netrc` file to Colab under `root` directory as shown in the figure below.\n\n![](https://i.imgur.com/oZLeJuY.png)\n\n\nNow we have all the setup done and are ready to code.\n\nWe first load the required libraries. Then, read the text file and loop over every line in it to download from the URL using the `requests` module. Finally, we save the file to Colab's hard drive. If you do not see the files after running code, make sure to wait for at least a day after registering to earthdata to make your account activated. I was late to read about it and had wasted a long time debugging it. \n\n```python\nimport pandas as pd\nimport numpy as np\nimport xarray as xr\nimport requests \n\n# dataframe to read the text file which contains all the download links\nds = pd.read_csv('/content/subset_GPM_3IMERGHH_06_20210611_142330.txt', header = None, sep = '\\n')[0]\n\n# Do not forget to add .netrc file in the root dir of Colab. printing `result` should return status code 200\nfor file in range(2, len(ds)): # skip first 2 rows as they contain metadata files\n  URL = ds[file]\n  result = requests.get(URL)\n  try:\n    result.raise_for_status()\n    filename = 'test' + str(file) + '.nc'\n    with open(filename, 'wb') as f:\n        f.write(result.content)\n\n  except:\n    print('requests.get() returned an error code '+str(result.status_code))\n\nxr_df = xr.open_mfdataset('test*.nc')\n\nxr_df.mean(dim = ['lat', 'lon']).to_dataframe().to_csv('results.csv')\n\n```\nIn the above snippet, what is interesting is the method `open_mfdataset` which takes in all the `netCDF` files and gives us a nice, compact output from which we can subset and further process our data.\nHere, we take the average of all the values (precipitation) and convert it into a new dataframe. We are ready to export it as CSV.\n\n### Method 2: Using wget to download and then preprocess using xarray\n\nIn this method, we download all the netCDF files using `wget`. These files are then read using xarray which makes it really easy to process and get the information we require. \n\n\nRunning the following shell command in Google Colab will download all the data from the text file URLs. Make sure to replace `your_user_name` , `<url text file>` within the command. It will ask for password of your earthdata account on running the cell.\n\n```sh\n! wget --load-cookies /.urs_cookies --save-cookies /root/.urs_cookies --auth-no-challenge=on --user=your_user_name --ask-password --content-disposition -i <url text file>\n```\n\nOnce the above shell command is run on Colab, the following 2 lines of code will give a nice dataframe which can be exported to csv for further analysis. \n\n```python\nimport xarray as xr\nimport glob\n\nds = xr.open_mfdataset('test*.nc')\nds.precipitationCal.mean(dim=('lon', 'lat')).plot() # calculate the average precipitation on a half-hourly basis.\n```\n\n### Final Comments\n\nIn this post we looked into how to download and preprocess netCDF data provided by [NASA GES DISC](https://disc.gsfc.nasa.gov/datasets/GPM_3IMERGHHL_06/summary).\nWe looked at two methods, one with pure Python and the other with wget and xarray. All performed on google Colab. \nIt is to be noted that, there is a significant setup required i.e, to create a new `.netrc` file and store inside the root directory of Colab else it returns an authorisation error. We looked at how easy it is to process netCDF data in xarray and how wget commands can be run on Colab.\n\nWatch the video tutorial [here](https://www.youtube.com/watch?v=T_Us4hJxSeI). The notebook for reference is located [here](https://Colab.research.google.com/drive/1VIKun8K3RT8VvcPJ7DE5uDDC10i10k1T?usp=sharing).\n\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"paged","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"wrap","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../_variables.scss"],"toc":true,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en-GB","fig-responsive":true,"quarto-version":"1.3.450","theme":["sandstone"],"page-layout":"article","fontsize":"1.1em","linestretch":1.7,"fontcolor":"black","author":[{"id":"cvc","number":1,"name":{"given":"Aman","family":"Bagrecha","literal":"Aman Bagrecha","non-dropping-particle":"von"},"orcid":"0000-0003-3131-0864","email":"jainaman588@gmail.com"}],"mermaid":{"theme":"neutral"},"title":"Download and preprocess NASA GPM IMERG Data using Python and wget","date":"2022-04-20","slug":"download-and-preprocess-nasa-gpm-imerg-data-using-python-and-wget","categories":["Python"],"tags":["xarray","Colab"],"subtitle":"","description":"In this blog post we look into how to download precipitation data from NASA website and process it with `xarray` and/or `wget`.","featured":"no","draft":false,"reading-time":"yes"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}